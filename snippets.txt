######################
# bash

# For useful one-liners, with which I am not quite sure what to do yet:
TODO: Put on command-line-fu? (might even already be there...)

# locate files with multiple hard links + sort by increasing number of hard links
find . -type f -printf "%n links=%n %p\n" | grep -v "links=1" | sort -n

# same, but sort by file size
find . -type f -printf "%s %n links=%n %p\n" | grep -v "links=1" | sort -n | less

# convert video to mp3 audio file
ffmpeg -i StarCraft\ -\ OST.mp4 /tmp/lol.mp3

# convert video to ogg audio file (failed with "theora_encode_init failed")
ffmpeg -i StarCraft\ -\ OST.mp4 /tmp/lol.ogg

# convert video to ogg audio file
ffmpeg2theora --novideo -o /tmp/lol.ogg ./StarCraft\ -\ OST.mp4 

# vim: search&replace with confirmation
%s/STRING1/STRING2/gc

press shift-H while in a manual to get help on less :)

# print out third line in a file
sed -n -e'3p' file.txt

# add/remove user from group
gpasswd -a/-d USER GROUP

# .msi installation
wine msiexec /i FOO.msi

%%%%%%%%%%%%%%%%%%%%%%%%
%Matlab:
%%% extracting data from figure:

% "plot" (2D) plot:
  h = gcf; %current figure handle
  axesObjs = get(h, 'Children');  %axes handles
  dataObjs = get(axesObjs, 'Children'); %handles to low-level graphics objects in axes
  objTypes = get(dataObjs, 'Type');  %type of low-level graphics object
  xdata = get(dataObjs, 'XData');  %data from low-level grahics objects
  ydata = get(dataObjs, 'YData');
  zdata = get(dataObjs, 'ZData');

% "imagesc" plot:
  objTypes1 = get(dataObjs{1}, 'Type');
  objTypes2 = get(dataObjs{2}, 'Type');
  cdata1 = get(dataObjs{1}, 'CData');
  cdata2 = get(dataObjs{2}, 'CData');
  imagesc(cdata2)
